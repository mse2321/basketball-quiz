{"version":3,"sources":["components/layout/Header.jsx","components/views/Intro.jsx","context/state.jsx","components/views/Quiz.jsx","components/views/Score.jsx","components/views/ViewContainer.jsx","components/App.jsx","index.js"],"names":["Header","Intro","props","toggleIntro","toggleQuiz","id","className","Button","onClick","StateContext","createContext","useStateContext","useContext","StateProvider","children","useState","quizQuestions","questions","currentQuestion","setCurrentQuestion","score","setScore","defaultContext","Provider","value","Quiz","toggleScore","gotRightAnswer","setGotRightAnswer","showAnswerFeedback","setShowAnswerFeedback","newIndex","setNewIndex","progress","setProgress","useEffect","ProgressBar","now","max","srOnly","variant","Fragment","question","Form","answers","map","answer","index","Check","inline","type","label","name","e","correctAnswer","target","_","isEmpty","quizAnswers","length","updatedIndex","document","querySelector","checked","showNextQuestion","Score","newScore","startOverFunc","ViewContainer","showIntro","showQuiz","showScore","App","Container","fluid","Row","Col","xs","md","lg","xl","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e34a2e9.chunk.js","sourcesContent":["const Header = () => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <h1>Basketball Quiz</h1>\r\n            </div>\r\n\t    </header>\r\n    );\r\n};\r\n  \r\nexport default Header;\r\n  ","import { Button  } from 'react-bootstrap';\r\n\r\nconst Intro = (props) => {\r\n  const { \r\n    toggleIntro,\r\n    toggleQuiz \r\n  } = props;\r\n\r\n  const startQuiz = () => {\r\n    toggleIntro(false);\r\n    toggleQuiz(true);\r\n  }\r\n\r\n  return (\r\n    <div id=\"intro\">\r\n        <div className=\"container\">\r\n            <h2>Get ready to take the quiz!</h2>\r\n            <p>See how much you know about the NBA. Click below to see how you do.</p>\r\n            <Button id=\"quiz-start\" onClick={() => startQuiz()}>Start</Button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","\r\nimport React, { useState, useContext, createContext } from \"react\";\r\nimport quizQuestions from '../data/questions.json';\r\n\r\nconst StateContext = createContext();\r\n\r\nconst useStateContext = () => useContext(StateContext);\r\n\r\nconst StateProvider = ({ children }) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(quizQuestions.questions[0]);\r\n    const [score, setScore] = useState(0);\r\n    const [questions] = useState(quizQuestions.questions);\r\n\r\n    const defaultContext = {\r\n        questions,\r\n        currentQuestion,\r\n        score,\r\n        setCurrentQuestion,\r\n        setScore\r\n    };\r\n\r\n    return (\r\n        <StateContext.Provider value={defaultContext}>\r\n            { children }\r\n        </StateContext.Provider>\r\n    )\r\n};\r\n\r\nexport { StateProvider, useStateContext };\r\n","import React , { useState, useEffect } from \"react\";\r\nimport _ from 'lodash';\r\nimport { useStateContext } from '../../context/state';\r\nimport { Button, ProgressBar, Form  } from 'react-bootstrap';\r\n\r\nconst Quiz = (props) => {\r\n    const { \r\n        toggleQuiz,\r\n        toggleScore\r\n    } = props;\r\n\r\n    const {\r\n        currentQuestion, \r\n        setCurrentQuestion, \r\n        questions,\r\n        setScore,\r\n        score \r\n    } = useStateContext();\r\n\r\n\r\n    const [gotRightAnswer, setGotRightAnswer] = useState();\r\n    const [showAnswerFeedback, setShowAnswerFeedback] = useState(false);\r\n    const [newIndex, setNewIndex] = useState(0);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setCurrentQuestion(questions[newIndex]);\r\n    }, [currentQuestion, newIndex, questions, setCurrentQuestion]);\r\n\r\n    const showNextQuestion = () => {\r\n        const updatedIndex = newIndex + 1;\r\n        if(newIndex < questions.length) {\r\n            setNewIndex(updatedIndex);\r\n            // TODO - do I really need this?\r\n            setCurrentQuestion(questions[newIndex]);\r\n        }  \r\n\r\n        setShowAnswerFeedback(false);\r\n        document.querySelector('input:checked').checked = false;\r\n    }\r\n\r\n    const quizAnswers = (e, correctAnswer) => {\r\n        const answer = e.target.value;\r\n        \r\n        if(!_.isEmpty(answer) && (answer === correctAnswer)){\r\n            setScore(score + 10);\r\n            setGotRightAnswer(true); \r\n        } else {\r\n            setGotRightAnswer(false); \r\n        };\r\n\r\n        progress < 90 ? setProgress(progress + 10) : setProgress(100);\r\n        setShowAnswerFeedback(true);\r\n\r\n        return answer;\r\n    }\r\n\r\n    const viewScore = () => {\r\n        toggleQuiz(false);\r\n        toggleScore(true);\r\n    }\r\n\r\n    return (\r\n        <div id=\"quiz\">\r\n            <div className=\"quiz-container\">\r\n                <ProgressBar id=\"progressBar\" now={progress} max=\"100\" srOnly variant=\"warning\" /> \r\n                <div className=\"quiz-content\">\r\n                    {\r\n                        <React.Fragment>\r\n                            <h3 id=\"currentQuestion\">{'Question ' + (newIndex + 1)}</h3>\r\n                            <p id=\"question\">{currentQuestion.question}</p>\r\n\r\n                            <Form>\r\n                                <ul id=\"answers\">\r\n                                    {\r\n                                        (currentQuestion.answers).map((answer, index) => {\r\n                                            return <li key={index}>\r\n                                                <Form.Check \r\n                                                    inline\r\n                                                    type=\"radio\"\r\n                                                    label={answer} \r\n                                                    name={'question_' + (newIndex + 1)} \r\n                                                    className=\"answers\"\r\n                                                    value={answer} \r\n                                                    onClick={(e) => quizAnswers(e, currentQuestion.correctAnswer)} />\r\n                                            </li>\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            </Form>\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n                <div id=\"result\">\r\n                    <h4>Results</h4>\r\n                    <div className=\"answer_result\">\r\n                        {\r\n                            showAnswerFeedback && (\r\n                                gotRightAnswer ? <span className=\"correct\">Correct</span> : <span className=\"wrong\">Wrong</span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    newIndex === (questions.length - 1) && showAnswerFeedback ? \r\n                        <Button id=\"checkScore\" onClick={() => viewScore()}>View Score</Button> :\r\n                        <Button onClick={() => showNextQuestion()}>Next Question</Button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default Quiz;\r\n  ","const Score = (props) => {\r\n    const { \r\n        newScore,\r\n        startOverFunc \r\n    } = props;\r\n\r\n    return (\r\n        <div id=\"score\">\r\n            <div id=\"scoreboard\">\r\n                <span id=\"scoreTitle\">Your Score</span>\r\n                <div className=\"scoreDisplay\" id=\"actualScore\">{newScore}</div>\r\n                <button id=\"restart\" onClick={() => startOverFunc()}>Start Over?</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default Score;\r\n  ","import React , { useState } from \"react\";\r\nimport Intro from './Intro';\r\nimport Quiz from './Quiz';\r\nimport Score from './Score';\r\nimport { useStateContext } from '../../context/state';\r\n\r\nconst ViewContainer = () => {\r\n  const [showIntro, toggleIntro] = useState(true);\r\n  const [showQuiz, toggleQuiz] = useState(false);\r\n  const [showScore, toggleScore] = useState(false);\r\n  const { setCurrentQuestion, questions, score } = useStateContext();\r\n\r\n  const resetQuiz = () => {\r\n    setCurrentQuestion(questions[0]);\r\n    toggleQuiz(true);\r\n    toggleScore(false);\r\n    toggleIntro(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        { showIntro && <Intro toggleIntro={toggleIntro} toggleQuiz={toggleQuiz} /> }\r\n        { showQuiz && <Quiz toggleQuiz={toggleQuiz} toggleScore={toggleScore} /> }\r\n        { showScore && <Score newScore={score} startOverFunc={resetQuiz} toggleScore={toggleScore} /> }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ViewContainer;","import Header from './layout/Header';\nimport ViewContainer from './views/ViewContainer';\n//import Footer from './layout/Footer';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport '../scss/styles.scss';\nimport { StateProvider } from '../context/state';\n\nconst App = () => {\n  return (\n    <Container fluid>\n      <Row id=\"content_wrap\">\n        <StateProvider>\n          <Col xs={12} md={12} lg={12} xl={12}>\n            <Header />\n            <ViewContainer />\n          </Col>\n        </StateProvider>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}